{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/js/main.js"],"sourcesContent":["import axios from 'axios'\n\nconst API_KEY = '36979931-b9ebd2c49fac6caefdf5e0dc3'\n\nfunction getImagesByQuery(query) {\n\treturn axios\n\t\t.get(`https://pixabay.com/api/`, {\n\t\t\tparams: {\n\t\t\t\tkey: API_KEY,\n\t\t\t\tq: query,\n\t\t\t\timage_type: 'photo',\n\t\t\t\torientation: 'horizontal',\n\t\t\t\tsafesearch: true,\n\t\t\t},\n\t\t})\n\t\t.then(resp => resp.data)\n}\n\nexport default getImagesByQuery\n","import SimpleLightbox from 'simplelightbox'\nimport 'simplelightbox/dist/simple-lightbox.min.css'\n\nconst loader = document.querySelector('.loader')\nconst gallery = document.querySelector('.gallery')\n\nif (!loader || !gallery) {\n\tconsole.error('Required elements not found: .loader or .gallery')\n}\n\nlet simplelightbox = new SimpleLightbox('.gallery-link', {\n\tcaptionsData: 'alt',\n\tcaptionPosition: 'bottom',\n\tcaptionDelay: 250,\n})\n\nfunction createGallery(images) {\n\tif (!gallery) return\n\n\tconst markup = images.hits\n\t\t.map(\n\t\t\t({\n\t\t\t\twebformatURL,\n\t\t\t\tlargeImageURL,\n\t\t\t\ttags,\n\t\t\t\tlikes,\n\t\t\t\tviews,\n\t\t\t\tcomments,\n\t\t\t\tdownloads,\n\t\t\t}) => `<li class=\"gallery-item\">\n      <a class=\"gallery-link\" href=${largeImageURL}>\n      <div class=\"image-container\">\n        <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n      </div>\n      <div class=\"image-inform\">\n        <div>\n          <h3 class=\"image-inform-title\">Likes</h3>\n          <span class=\"image-inform-text\">${likes}</span>\n        </div>\n        <div>\n          <h3 class=\"image-inform-title\">Views</h3>\n          <span class=\"image-inform-text\">${views}</span>\n        </div>\n        <div>\n          <h3 class=\"image-inform-title\">Comments</h3>\n          <span class=\"image-inform-text\">${comments}</span>\n        </div>\n        <div>\n          <h3 class=\"image-inform-title\">Downloads</h3>\n          <span class=\"image-inform-text\">${downloads}</span>\n        </div>\n      </div>\n    </a>\n  </li>`\n\t\t)\n\t\t.join('')\n\n\tgallery.innerHTML = markup\n\tsimplelightbox.refresh()\n}\n\nfunction clearGallery() {\n\tif (!gallery) return\n\tgallery.innerHTML = ''\n}\n\nfunction showLoader() {\n\tif (!loader) return\n\tloader.classList.remove('hidden')\n}\n\nfunction hideLoader() {\n\tif (!loader) return\n\tloader.classList.add('hidden')\n}\n\nexport { clearGallery, createGallery, hideLoader, showLoader }\n","import iziToast from 'izitoast'\nimport 'izitoast/dist/css/iziToast.min.css'\nimport getImagesByQuery from './pixabay-api'\nimport {\n\tclearGallery,\n\tcreateGallery,\n\thideLoader,\n\tshowLoader,\n} from './render-functions'\n\nconst form = document.querySelector('.form')\nconst searchInput = form.querySelector('input[name=\"searchQuery\"]')\n\nform.addEventListener('submit', async event => {\n\tevent.preventDefault()\n\tconst query = searchInput.value.trim()\n\n\tif (!query) {\n\t\tiziToast.error({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: 'Please enter a search query',\n\t\t\tposition: 'topRight',\n\t\t})\n\t\treturn\n\t}\n\n\tclearGallery()\n\tshowLoader()\n\n\ttry {\n\t\tconst images = await getImagesByQuery(query)\n\t\tif (images.hits.length === 0) {\n\t\t\tiziToast.info({\n\t\t\t\ttitle: 'Info',\n\t\t\t\tmessage:\n\t\t\t\t\t'Sorry, there are no images matching your search query. Please try again!',\n\t\t\t\tposition: 'topRight',\n\t\t\t})\n\t\t} else {\n\t\t\tcreateGallery(images)\n\t\t}\n\t} catch (error) {\n\t\tiziToast.error({\n\t\t\ttitle: 'Error',\n\t\t\tmessage:\n\t\t\t\t'An error occurred while fetching images. Please try again later.',\n\t\t\tposition: 'topRight',\n\t\t})\n\t} finally {\n\t\thideLoader()\n\t}\n})\n"],"names":["API_KEY","getImagesByQuery","query","axios","resp","loader","gallery","simplelightbox","SimpleLightbox","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","form","searchInput","event","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCAEhB,SAASC,EAAiBC,EAAO,CAChC,OAAOC,EACL,IAAI,2BAA4B,CAChC,OAAQ,CACP,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACZ,CACD,CAAA,EACA,KAAKE,GAAQA,EAAK,IAAI,CACzB,CCbA,MAAMC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAU,SAAS,cAAc,UAAU,GAE7C,CAACD,GAAU,CAACC,IACf,QAAQ,MAAM,kDAAkD,EAGjE,IAAIC,EAAiB,IAAIC,EAAe,gBAAiB,CACxD,aAAc,MACd,gBAAiB,SACjB,aAAc,GACf,CAAC,EAED,SAASC,EAAcC,EAAQ,CAC9B,GAAI,CAACJ,EAAS,OAEd,MAAMK,EAASD,EAAO,KACpB,IACA,CAAC,CACA,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACJ,IAAS;AAAA,qCAC4BL,CAAa;AAAA;AAAA,0CAERD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,4CAKxBC,CAAK;AAAA;AAAA;AAAA;AAAA,4CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,4CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,4CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,QAKrD,EACG,KAAK,EAAE,EAETZ,EAAQ,UAAYK,EACpBJ,EAAe,QAAO,CACvB,CAEA,SAASY,GAAe,CAClBb,IACLA,EAAQ,UAAY,GACrB,CAEA,SAASc,GAAa,CAChBf,GACLA,EAAO,UAAU,OAAO,QAAQ,CACjC,CAEA,SAASgB,GAAa,CAChBhB,GACLA,EAAO,UAAU,IAAI,QAAQ,CAC9B,CChEA,MAAMiB,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAcD,EAAK,cAAc,2BAA2B,EAElEA,EAAK,iBAAiB,SAAU,MAAME,GAAS,CAC9CA,EAAM,eAAc,EACpB,MAAMtB,EAAQqB,EAAY,MAAM,KAAI,EAEpC,GAAI,CAACrB,EAAO,CACXuB,EAAS,MAAM,CACd,MAAO,QACP,QAAS,8BACT,SAAU,UACV,CAAA,EACD,MACF,CAECN,EAAY,EACZC,EAAU,EAEV,GAAI,CACH,MAAMV,EAAS,MAAMT,EAAiBC,CAAK,EACvCQ,EAAO,KAAK,SAAW,EAC1Be,EAAS,KAAK,CACb,MAAO,OACP,QACC,2EACD,SAAU,UACV,CAAA,EAEDhB,EAAcC,CAAM,CAErB,MAAe,CACfe,EAAS,MAAM,CACd,MAAO,QACP,QACC,mEACD,SAAU,UACV,CAAA,CACH,QAAW,CACTJ,EAAU,CACZ,CACA,CAAC"}